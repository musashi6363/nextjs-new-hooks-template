import { verifyWebhook } from '@clerk/nextjs/webhooks'
import { NextRequest } from 'next/server'
import { PrismaClient } from '@prisma/client';

export const prisma = new PrismaClient();

export async function POST(req: NextRequest) {
  try {
    const evt = await verifyWebhook(req)

    // Do something with payload
    // For this guide, log payload to console
    const { id } = evt.data
    const eventType = evt.type

        if (eventType === 'user.created') {
            try{
                await prisma.user.create({
                    data: {
                     id: evt.data.id,
                     email: JSON.parse(body).data.email,
                     name: JSON.parse(body).data.username,
                     image: JSON.parse(body).data.profile_image_url
                    },
                });
                return new Response("ユーザーを作成しました", { status: 200 })
            }catch(err){
                console.log(err)
                return new Response("ユーザーの作成に失敗しました", { status: 500 })
            }
        }

    return new Response('Webhook received', { status: 200 })
  } catch (err) {
    console.error('Error verifying webhook:', err)
    return new Response('Error verifying webhook', { status: 400 })
  }
}